#!/system/bin/bash 
C1="\e[31;1m"
C2="\e[32;1m"
C3="\e[33;1m"
C4="\e[34;1m"
C5="\e[35;1m"
C6="\e[36;1m"
CD="\e[0m"
CN="\n"
data(){
y=$(find /GhostRoot -maxdepth 4 -type f -name heheboi.nab)
z=${y%/*}  
clear
cout "Checking Data Image..!"
if [ -e $z/data.img ]; then 
cout "Data IMG IS Found..!"
mkdir -m755 /sdcard/datatmp #data temp
mkdir -m755 /sdcard/datamnt # data mount
cout "Select Your Size...!"
cout "1] 16 GB."
cout "2] 32 GB."
cout "3] 64 GB."
cout "4] 128 GB."
cout "5] 256 GB."
cout "6] Return to Main Menu."
cout "7] Exit."
echo -e "\e[93;1m"
read -p "Select Your Size >> " size 
echo -e "\e[0m"
case $size in 
1)
cout "Creating 16 Gb Size Data.img"
dd if=/dev/zero of=/sdcard/datatmp/data.img bs=1M count=16384 > /dev/null 2>&1 
cout "Data.img Created..! Press "y" For Formant New Data.img As ext4."
cout " "
mke2fs -t ext4 /sdcard/datatmp/data.img 
cout "Mounting Data.img To Transfer old data to New Data.img."
mount /sdcard/datatmp/data.img /sdcard/datamnt/ 
sleep 0.5
clear
echo -e "${C6}          Progress   ${C5}   Speed     ${C3}   Time${CD}${CN}"
rsync -ah --info=progress2 /data/* /sdcard/datamnt/ 
umount /sdcard/datamnt
cout " "
cout "Heheboi" &
alsa_aplay /system/etc/sounds/done.sos > /dev/null 2>&1
cout "Moving data.img In Ext4_Partition."
mv /sdcard/datatmp/data.img $z/new.img  
cout "Sucessfully Moved in Ext4_Partition."
rmdir /sdcard/datamnt
rmdir /sdcard/datatmp
cout "Renaming Old Data.img To Data.bak ${C1}${CD}For Safety.${CD}${CN}"
mv $z/data.img $z/data.bak 
mv $z/new.img $z/data.img
sleep 2
sec=5
while [ $sec -ge 0 ]; do
echo -ne "\e[33;1mRebooting in:-\e[91;1m $sec \e[0m\033[0K\r"
let "sec=sec-1"
sleep 1
done
reboot ;;
2)cout "Creating 32 Gb Size Data.img."
dd if=/dev/zero of=/sdcard/datatmp/data.img bs=1M count=32768 > /dev/null 2>&1 
cout "Data.img Created..! Press "y" For Formant New Data.img As ext4."
echo -e " "
mke2fs -t ext4 /sdcard/datatmp/data.img 
cout "Mounting Data.img To Transfer old data to New Data.img."
mount /sdcard/datatmp/data.img /sdcard/datamnt/ 
sleep 0.5
clear
echo -e "${C6}          Progress   ${C5}   Speed     ${C3}   Time${CD}${CN}"
rsync -ah --info=progress2 /data/* /sdcard/datamnt/ 
umount /sdcard/datamnt
cout " "
cout "Heheboi" &
alsa_aplay /system/etc/sounds/done.sos > /dev/null 2>&1
cout "Moving data.img In Ext4_Partition."
mv /sdcard/datatmp/data.img $z/new.img   
cout "Sucessfully moved to ext4_partition."
rmdir /sdcard/datamnt
rmdir /sdcard/datatmp
cout "Renaming Old Data.img To Data.bak ${C1}${CD}For Safety.${CD}${CN}"
mv $z/data.img $z/data.bak 
mv $z/new.img $z/data.img
sleep 2
sec=5
while [ $sec -ge 0 ]; do
echo -ne "\e[33;1mRebooting in:-\e[91;1m $sec \e[0m\033[0K\r"
let "sec=sec-1"
sleep 1
done
reboot ;;
3)cout "${C3}Creating 64 Gb Size Data.img${CN}${CD}" 
dd if=/dev/zero of=/sdcard/datatmp/data.img bs=1M count=65536 > /dev/null 2>&1 
cout "Data.img Created..! Press "y" For Formant New Data.img As ext4."
echo -e " "
mke2fs -t ext4 /sdcard/datatmp/data.img 
cout "Mounting Data.img To Transfer old data to New Data.img."
mount /sdcard/datatmp/data.img /sdcard/datamnt/ 
sleep 0.5
clear
echo -e "${C6}          Progress   ${C5}   Speed     ${C3}   Time${CD}${CN}"
rsync -ah --info=progress2 /data/* /sdcard/datamnt/ 
umount /sdcard/datamnt
cout " "
cout "Heheboi" &
alsa_aplay /system/etc/sounds/done.sos > /dev/null 2>&1
cout "Moving data.img In Ext4_Partition."
mv /sdcard/datatmp/data.img $z/new.img   
cout "Sucessfully moved to ext4_partition."
rmdir /sdcard/datamnt
rmdir /sdcard/datatmp
cout "Renaming Old Data.img To Data.bak ${C1}${CD}For Safety.${CD}${CN}"
mv $z/data.img $z/data.bak 
mv $z/new.img $z/data.img
sleep 2
sec=5
while [ $sec -ge 0 ]; do
echo -ne "\e[33;1mRebooting in:-\e[91;1m $sec \e[0m\033[0K\r"
let "sec=sec-1"
sleep 1
done
reboot;;
4)
cout "${C3}Creating 128 Gb Size Data.img${CN}${CD}" 
dd if=/dev/zero of=/sdcard/datatmp/data.img bs=1M count=131072 > /dev/null 2>&1 
cout "Data.img Created..! Press "y" For Formant New Data.img As ext4."
echo -e " "
mke2fs -t ext4 /sdcard/datatmp/data.img 
cout "Mounting Data.img To Transfer old data to New Data.img."
mount /sdcard/datatmp/data.img /sdcard/datamnt/ 
sleep 0.5
clear
echo -e "${C6}          Progress   ${C5}   Speed     ${C3}   Time${CD}${CN}"
rsync -ah --info=progress2 /data/* /sdcard/datamnt/ 
umount /sdcard/datamnt
cout " "
cout "Heheboi" &
alsa_aplay /system/etc/sounds/done.sos > /dev/null 2>&1
cout "Moving data.img In Ext4_Partition."
mv /sdcard/datatmp/data.img $z/new.img   
cout "Sucessfully moved to ext4_partition."
rmdir /sdcard/datamnt
rmdir /sdcard/datatmp
cout "Renaming Old Data.img To Data.bak ${C1}${CD}For Safety.${CD}${CN}"
mv $z/data.img $z/data.bak 
mv $z/new.img $z/data.img
sleep 2
sec=5
while [ $sec -ge 0 ]; do
echo -ne "\e[33;1mRebooting in:-\e[91;1m $sec \e[0m\033[0K\r"
let "sec=sec-1"
sleep 1
done
reboot;;
5)cout "${C3}Creating 256 Gb Size Data.img${CN}${CD}" 
dd if=/dev/zero of=/sdcard/datatmp/data.img bs=1M count=262144 > /dev/null 2>&1 
cout "Data.img Created..! Press "y" For Formant New Data.img As ext4."
echo -e " "
mke2fs -t ext4 /sdcard/datatmp/data.img 
cout "Mounting Data.img To Transfer old data to New Data.img."
mount /sdcard/datatmp/data.img /sdcard/datamnt/ 
sleep 0.5
clear
echo -e "${C6}          Progress   ${C5}   Speed     ${C3}   Time${CD}${CN}"
rsync -ah --info=progress2 /data/* /sdcard/datamnt/ 
umount /sdcard/datamnt
cout " "
cout "Heheboi" &
alsa_aplay /system/etc/sounds/done.sos > /dev/null 2>&1
cout "Moving data.img In Ext4_Partition."
mv /sdcard/datatmp/data.img $z/new.img   
cout "Sucessfully moved to ext4_partition."
rmdir /sdcard/datamnt
rmdir /sdcard/datatmp
cout "Renaming Old Data.img To Data.bak ${C1}${CD}For Safety.${CD}${CN}"
mv $z/data.img $z/data.bak 
mv $z/new.img $z/data.img
sleep 2
sec=5
while [ $sec -ge 0 ]; do
echo -ne "\e[33;1mRebooting in:-\e[91;1m $sec \e[0m\033[0K\r"
let "sec=sec-1"
sleep 1
done
reboot;;
6)
bash /system/script/menu ;;
7) exit ;;
esac
else
cout "Your Using Ext4 Partition or Live Mode." 
fi
}
cli (){
center "Welcome"
logo "Data-Resizer"
center "Heheboi"
echo 
cout "Re-Size Data.img."
cout "Choose your Options"
cout "1] Re-size Data.img."
cout "2] Return Main-Menu."
cout "3] Exit."
echo -e "\e[93;1m"
read -p "Enter Your Choice >> " c 
echo -e "\e[0m"
case $c in 
1)
data ;;
2)
bash /system/script/menu ;;
3)
exit ;;
*)
clear
cout "AH Boi Here We Go again.....!"
sleep 2
clear 
cli
esac 
}
cli