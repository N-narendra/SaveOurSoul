#!/system/bin/bash
C1="\e[31;1m"
C2="\e[32;1m"
C3="\e[33;1m"
C4="\e[34;1m"
C5="\e[35;1m"
C6="\e[36;1m"
sys(){
y=$(find /GhostRoot -maxdepth 4 -type f -name heheboi.nab)
z=${y%/*}    
F=$z/system.img
if [ -d $z/system ]; then 
cout "${C1}System Folder Form Please Do Folder2Img.!${CN}${CD}"
exit
else  
cout "${C2}System.img is Found Please choose your size To increase..!${CN}${CD}"
cout "${C3}1] 5 GB.${CN}${CD}"
cout "${C2}2] 6 GB. ${CN}${CD}"
cout "${C6}3] Custom size ${CN}${CD}"
cout "${C5}4] Return to Main Menu.${CN}${CD}"
cout "${C1}5] Exit.${CN}${CD}"
echo -e "\e[93;1m"
read -p "Enter Your Option >>> " c 
echo -e "\e[0m"
case $c in 
1)
mkdir -m755 /sdcard/systmp 
mkdir -m755 /sdcard/sysmnt 
cout "${C3}Creating 5 Gb Size System.img${CN}${CD}"
dd if=/dev/zero of=/sdcard/systmp/system.img bs=1M count=5120 > /dev/null 2>&1 
cout "${C4}System.img Created..! Press "y" For Formant New System.img As ext4${CN}${CD}"
mke2fs -t ext4 /sdcard/systmp/system.img 
cout "${C5}Mountind System.img To Transfer old data to New System.img.${CN}${CD}"
mount /sdcard/systmp/system.img /sdcard/sysmnt/ 
sleep 0.5
clear
echo -e "${C6}          Progress   ${C5}   Speed     ${C3}   Time${CD}${CN}"
rsync -ah --info=progress2 /system/* /sdcard/sysmnt/ 
umount /sdcard/sysmnt
cout "${C3}Heheboi${CD}${CN}"
alsa_aplay /system/etc/sounds/done.sos > /dev/null 2>&1
cout "${C4}Moving system.img In Ext4_Partition.${CD}${CN}"
mv /sdcard/systmp/system.img $z/new.img  
cout "${C3}Moved.${CD}${CN}"
rmdir /sdcard/sysmnt
rmdir /sdcard/systmp
cout "${C6}Renaming Old system.img To system.bak ${C1}${CD}For Safety.${CD}${CN}"
mv $z/system.img $z/system.bak 
mv $z/new.img $z/system.img
sleep 2
sec=5
while [ $sec -ge 0 ]; do
echo -ne "\e[33;1mRebooting in:-\e[91;1m $sec \e[0m\033[0K\r"
let "sec=sec-1"
sleep 1
done
reboot ;; 
2)
mkdir -m755 /sdcard/systmp 
mkdir -m755 /sdcard/sysmnt 
cout "${C3}Creating 6 Gb Size System.img${CN}${CD}"
dd if=/dev/zero of=/sdcard/systmp/system.img bs=1M count=6144 > /dev/null 2>&1 
cout "${C4}System.img Created..! Press "y" For Formant New System.img As ext4${CN}${CD}"
cout " "
mke2fs -t ext4 /sdcard/systmp/system.img 
cout "${C5}Mountind System.img To Transfer old data to New System.img.${CN}${CD}"
mount /sdcard/systmp/system.img /sdcard/sysmnt/ 
sleep 0.5
clear
echo -e "${C6}          Progress   ${C5}   Speed     ${C3}   Time${CD}${CN}"
rsync -a --info=progress2 /system/* /sdcard/sysmnt/ 
umount /sdcard/sysmnt
cout " "
cout "${C3}Heheboi${CD}${CN}"
alsa_aplay /system/etc/sounds/done.sos > /dev/null 2>&1
cout "${C4}Moving system.img In Ext4_Partition.${CD}${CN}"
mv /sdcard/systmp/system.img $z/new.img  
cout "${C3}Moved.${CD}${CN}"
rmdir /sdcard/sysmnt
rmdir /sdcard/systmp
cout "${C6}Renaming Old system.img To system.bak ${C1}${CD}For Safety.${CD}${CN}"
mv $z/system.img $z/system.bak 
mv $z/new.img $z/system.img
sleep 2
sec=5
while [ $sec -ge 0 ]; do
echo -ne "\e[33;1mRebooting in:-\e[91;1m $sec \e[0m\033[0K\r"
let "sec=sec-1"
sleep 1
done
reboot ;; 
3)
mkdir -m755 /sdcard/systmp 
mkdir -m755 /sdcard/sysmnt 
cout "${C3}Enter You Custom size...!${CN}${CD}"
read -p "Size Of system.img In GB Example( 4 )" size 
s=$(($size * 1024))
echo 
cout "${C3}Creating "$s" Gb Size System.img${CN}${CD}"
dd if=/dev/zero of=/sdcard/systmp/system.img bs=1M count=$s > /dev/null 2>&1 
cout "${C4}System.img Created..! Press "y" For Formant New System.img As ext4${CN}${CD}"
cout " "
mke2fs -t ext4 /sdcard/systmp/system.img 
cout "${C5}Mountind System.img To Transfer old data to New System.img.${CN}${CD}"
mount /sdcard/systmp/system.img /sdcard/sysmnt/ 
sleep 0.5
clear
echo -e "${C6}          Progress   ${C5}   Speed     ${C3}   Time${CD}${CN}"
rsync -a --info=progress2 /system/* /sdcard/sysmnt/ 
umount /sdcard/sysmnt
cout " "
cout "${C3}Heheboi${CD}${CN}"
alsa_aplay /system/etc/sounds/done.sos > /dev/null 2>&1
cout "${C4}Moving system.img In Ext4_Partition.${CD}${CN}"
mv /sdcard/systmp/system.img $z/new.img  
cout "${C3}Moved.${CD}${CN}"
rmdir /sdcard/sysmnt
rmdir /sdcard/systmp
cout "${C6}Renaming Old system.img To system.bak ${C1}${CD}For Safety.${CD}${CN}"
mv $z/system.img $z/system.bak 
mv $z/new.img $z/system.img
sleep 2
sec=5
while [ $sec -ge 0 ]; do
echo -ne "\e[33;1mRebooting in:-\e[91;1m $sec \e[0m\033[0K\r"
let "sec=sec-1"
sleep 1
done
reboot ;; 
4)
bash /system/script/menu ;;
5)
exit ;;
*)
clear
cout "${C3}Ah Boi Here We Go Again...${CN}${CD}"
sleep 2
sys ;;
esac 
fi 
}
cli(){
clear 
center "Welcome"
logo "System.img Reszier"
center "Heheboi" 
echo  
cout "${C3}System ReSizer....!${CN}${CD}"
cout "${C2}Select Your Option...!${CN}${CD}"
cout "${C4}1] System-Resize.!${CN}${CD}"
cout "${C5}2] Return To Main Menu.!${CN}${CD}"
cout "${C1}3] Exit.!${CN}${CD}"
echo -e "\e[93;1m"
read -p "Enter your Option >> " c 
echo -e "\e[0m"
case $c in 
1)
sys ;;
2)
bash /system/script/misc/system ;;
3)
exit ;;
*)
clear 
cout "${C3}AH Boi Here We Go Again...!${CN}${CD}"
sleep 2
cli ;;
esac
}
cli