#!/system/bin/bash
C1="\e[31;1m"
C2="\e[32;1m"
C3="\e[33;1m"
C4="\e[34;1m"
C5="\e[35;1m"
C6="\e[36;1m"
CD="\e[0m"
enable(){
cout "${C6}[ ENABLING EXTREME MODE ]${CD}${CN}"
if [ -d /system/app/com.n0n3m4.gltools-1 ]; then
pm clear com.n0n3m4.gltools
elif [ -d /data/app/com.n0n3m4.gltools-1 ]; then
pm clear com.n0n3m4.gltools
else
pm disable com.android.vending > /dev/null 2>&1
pm install -g /system/etc/security/cacerts/intel/proxy/GLTools.apk > /dev/null 2>&1 
fi
cout "${C2}[ CHOOSE YOUR TEMPLATE ]${CD}${CN}"
cout "${C4} [1] MALI-G72 HYBRID (EXTREME,SMOOTHER,STABLE) ${CD}${CN}"
cout "${C3} [2] ADRENO 650 (BEST FOR COD, NOT FOR PUBG)   ${CD}${CN}"
cout "${C4} [3] APPLE A13 (BEST FOR PUBG KR,MOST SMOOTH FOR ALL DEVICES) ${CD}${CN}"
cout "${C3} [4] TEGRA SHIELD 4 (MEDIUM GRAPHICS,GOOD FPS, BEST FOR NVIDIA USERS)   ${CD}${CN}"
cout "${C4} [5] MALI T860 (LOW GRAPHICS, BETTER FOR LOW END) ${CD}${CN}"
cout "${C3} [6] G6430 (LOWEST GRAPHICS,RECOMMENTED FOR POTATO)   ${CD}${CN}"
cout "${C4} [7] MALI G76 (MOST STABLE FROM MALI, BETTER FOR ALL DEVICES) ${CD}${CN}"
cout "${C3} [8] CUSTOM TEMPLATE (PUT gl.zip in ghost)   ${CD}${CN}"
cout "${C1} [e] Exit.${CD}${CN}"
echo -e "\e[92;1m"
read -p "Enter your Choice :-" C 
echo -e "\e[0m"
clear
case $C in
1)
cout "${C6}[ INJECTING FAKE-GPU... ]${CD}${CN}"
monkey -p com.n0n3m4.gltools -c android.intent.category.LAUNCHER 1
sleep 3
am force-stop com.n0n3m4.gltools
pm enable com.android.vending
cd /system/etc/security/cacerts/intel/proxy/global/2
rsync -aq uid_all.glt /data/data/com.n0n3m4.gltools/files/
rsync -aq uid_all.xml /data/data/com.n0n3m4.gltools/shared_prefs/
cd /data/data/com.n0n3m4.gltools/files
chmod 755 uid_all.glt
cd /data/data/com.n0n3m4.gltools/shared_prefs
chmod 755 uid_all.xml
if [ -d /data/app/com.n0n3m4.gltools-1 ]; then
cd /data/app
mv -f com.n0n3m4.gltools-1 /system/app/
find /system/app -type d -exec chmod 755 {} \;
find /system/app/com.n0n3m4.gltools-1 -type f -exec chmod 644 {} \;
fi
;;
2)
cout "${C6}[ INJECTING FAKE-GPU... ]${CD}${CN}"
monkey -p com.n0n3m4.gltools -c android.intent.category.LAUNCHER 1
sleep 3
am force-stop com.n0n3m4.gltools
pm enable com.android.vending
cd /system/etc/security/cacerts/intel/proxy/global/3
rsync -aq uid_all.glt /data/data/com.n0n3m4.gltools/files/
rsync -aq uid_all.xml /data/data/com.n0n3m4.gltools/shared_prefs/
cd /data/data/com.n0n3m4.gltools/files
chmod 755 uid_all.glt
cd /data/data/com.n0n3m4.gltools/shared_prefs
chmod 755 uid_all.xml
if [ -d /data/app/com.n0n3m4.gltools-1 ]; then
cd /data/app
mv -f com.n0n3m4.gltools-1 /system/app/
find /system/app -type d -exec chmod 755 {} \;
find /system/app/com.n0n3m4.gltools-1 -type f -exec chmod 644 {} \;
fi
;;
3)
cout "${C6}[ INJECTING FAKE-GPU... ]${CD}${CN}"
monkey -p com.n0n3m4.gltools -c android.intent.category.LAUNCHER 1
sleep 3
am force-stop com.n0n3m4.gltools
pm enable com.android.vending
cd /system/etc/security/cacerts/intel/proxy/global/4
rsync -aq uid_all.glt /data/data/com.n0n3m4.gltools/files/
rsync -aq uid_all.xml /data/data/com.n0n3m4.gltools/shared_prefs/
cd /data/data/com.n0n3m4.gltools/files
chmod 755 uid_all.glt
cd /data/data/com.n0n3m4.gltools/shared_prefs
chmod 755 uid_all.xml
if [ -d /data/app/com.n0n3m4.gltools-1 ]; then
cd /data/app
mv -f com.n0n3m4.gltools-1 /system/app/
find /system/app -type d -exec chmod 755 {} \;
find /system/app/com.n0n3m4.gltools-1 -type f -exec chmod 644 {} \;
fi
;;
4)
cout "${C6}[ INJECTING FAKE-GPU... ]${CD}${CN}"
monkey -p com.n0n3m4.gltools -c android.intent.category.LAUNCHER 1
sleep 3
am force-stop com.n0n3m4.gltools
pm enable com.android.vending
cd /system/etc/security/cacerts/intel/proxy/global/5
rsync -aq uid_all.glt /data/data/com.n0n3m4.gltools/files/
rsync -aq uid_all.xml /data/data/com.n0n3m4.gltools/shared_prefs/
cd /data/data/com.n0n3m4.gltools/files
chmod 755 uid_all.glt
cd /data/data/com.n0n3m4.gltools/shared_prefs
chmod 755 uid_all.xml
if [ -d /data/app/com.n0n3m4.gltools-1 ]; then
cd /data/app
mv -f com.n0n3m4.gltools-1 /system/app/
find /system/app -type d -exec chmod 755 {} \;
find /system/app/com.n0n3m4.gltools-1 -type f -exec chmod 644 {} \;
fi
;;
5)
cout "${C6}[ INJECTING FAKE-GPU... ]${CD}${CN}"
monkey -p com.n0n3m4.gltools -c android.intent.category.LAUNCHER 1
sleep 3
am force-stop com.n0n3m4.gltools
pm enable com.android.vending
cd /system/etc/security/cacerts/intel/proxy/global/6
rsync -aq uid_all.glt /data/data/com.n0n3m4.gltools/files/
rsync -aq uid_all.xml /data/data/com.n0n3m4.gltools/shared_prefs/
cd /data/data/com.n0n3m4.gltools/files
chmod 755 uid_all.glt
cd /data/data/com.n0n3m4.gltools/shared_prefs
chmod 755 uid_all.xml
if [ -d /data/app/com.n0n3m4.gltools-1 ]; then
cd /data/app
mv -f com.n0n3m4.gltools-1 /system/app/
find /system/app -type d -exec chmod 755 {} \;
find /system/app/com.n0n3m4.gltools-1 -type f -exec chmod 644 {} \;
fi
;;
6)
cout "${C6}[ INJECTING FAKE-GPU... ]${CD}${CN}"
monkey -p com.n0n3m4.gltools -c android.intent.category.LAUNCHER 1
sleep 3
am force-stop com.n0n3m4.gltools
pm enable com.android.vending
cd /system/etc/security/cacerts/intel/proxy/global/7
rsync -aq uid_all.glt /data/data/com.n0n3m4.gltools/files/
rsync -aq uid_all.xml /data/data/com.n0n3m4.gltools/shared_prefs/
cd /data/data/com.n0n3m4.gltools/files
chmod 755 uid_all.glt
cd /data/data/com.n0n3m4.gltools/shared_prefs
chmod 755 uid_all.xml
if [ -d /data/app/com.n0n3m4.gltools-1 ]; then
cd /data/app
mv -f com.n0n3m4.gltools-1 /system/app/
find /system/app -type d -exec chmod 755 {} \;
find /system/app/com.n0n3m4.gltools-1 -type f -exec chmod 644 {} \;
fi
;;
7)
cout "${C6}[ INJECTING FAKE-GPU... ]${CD}${CN}"
monkey -p com.n0n3m4.gltools -c android.intent.category.LAUNCHER 1
sleep 3
am force-stop com.n0n3m4.gltools
pm enable com.android.vending
cd /system/etc/security/cacerts/intel/proxy/global/8
rsync -aq uid_all.glt /data/data/com.n0n3m4.gltools/files/
rsync -aq uid_all.xml /data/data/com.n0n3m4.gltools/shared_prefs/
cd /data/data/com.n0n3m4.gltools/files
chmod 755 uid_all.glt
cd /data/data/com.n0n3m4.gltools/shared_prefs
chmod 755 uid_all.xml
if [ -d /data/app/com.n0n3m4.gltools-1 ]; then
cd /data/app
mv -f com.n0n3m4.gltools-1 /system/app/
find /system/app -type d -exec chmod 755 {} \;
find /system/app/com.n0n3m4.gltools-1 -type f -exec chmod 644 {} \;
fi
;;
8)
cout "${C6}[ INJECTING FAKE-GPU... ]${CD}${CN}"
monkey -p com.n0n3m4.gltools -c android.intent.category.LAUNCHER 1
sleep 3
am force-stop com.n0n3m4.gltools
pm enable com.android.vending
if [ -e /data/media/0/ghost/gl.zip ]; then
cd  /data/media/0/ghost
unzip -oq gl
cd /data/media/0/ghost
mv -f uid_all.glt /data/data/com.n0n3m4.gltools/files/
cd /data/media/0/ghost
mv -f uid_all.xml /data/data/com.n0n3m4.gltools/shared_prefs/
cd /data/data/com.n0n3m4.gltools/files
chmod 755 uid_all.glt
cd /data/data/com.n0n3m4.gltools/shared_prefs
chmod 755 uid_all.xml
else
cout "${C4}[ Custom Temaplate not found, Ask Developer for More Info ]${CD}${CN}"
sleep 3
fi
if [ -d /data/app/com.n0n3m4.gltools-1 ]; then
cd /data/app
mv -f com.n0n3m4.gltools-1 /system/app/
find /system/app -type d -exec chmod 755 {} \;
find /system/app/com.n0n3m4.gltools-1 -type f -exec chmod 644 {} \;
fi
;;
e)
exit 
;;
*)
cout "${C3}Wrong Input Boi....${CD}${CN}"
sleep 1
clear
enable 
;;
esac
cout "${C6}[ UPDATING LIBS ]${CD}${CN}"
if [ -e /system/lib/libEGL_orig.so ]; then
cd /system/etc/security/cacerts/intel/proxy
rsync -aq uninstall_gltools.zip /data/media/0/
cd /system/etc/security/cacerts/intel/proxy/lib
find -type f -exec chmod 644 {} \;
cd /system/etc/security/cacerts/intel/proxy/lib
rsync -aq *.so /system/lib
cd /system/etc/security/cacerts/intel/proxy/lib64
find -type f -exec chmod 644 {} \;
cd /system/etc/security/cacerts/intel/proxy/lib64
rsync -aq *.so /system/lib64
sleep 3
cout "${C6}[ HeHe Boi ]${CD}${CN}"
alsa_aplay /system/etc/sounds/done.sos > /dev/null 2>&1
sec=5
while [ $sec -ge 0 ]; do
echo -ne "\e[33;1mRebooting in:-\e[91;1m$sec\e[0m\033[0K\r"
let "sec=sec-1"
sleep 1
done
reboot
else
cd /system/etc/security/cacerts/intel/proxy
rsync -aq uninstall_gltools.zip /data/media/0/
cd /system/lib
mv -f libEGL.so libEGL_orig.so
cd /system/lib
mv -f libGLESv1_CM.so libGLESv1_CM_orig.so
cd /system/lib
mv -f libGLESv2.so libGLESv2_orig.so
cd /system/lib
mv -f libGLESv3.so libGLESv3_orig.so
cd /system/lib64
mv -f libEGL.so libEGL_orig.so
cd /system/lib64
mv -f libGLESv1_CM.so libGLESv1_CM_orig.so
cd /system/lib64
mv -f libGLESv2.so libGLESv2_orig.so
cd /system/lib64
mv -f libGLESv3.so libGLESv3_orig.so
cd /system/etc/security/cacerts/intel/proxy/lib
find -type f -exec chmod 644 {} \;
cd /system/etc/security/cacerts/intel/proxy/lib
rsync -aq *.so /system/lib
cd /system/etc/security/cacerts/intel/proxy/lib64
find -type f -exec chmod 644 {} \;
cd /system/etc/security/cacerts/intel/proxy/lib64
rsync -aq *.so /system/lib64
sleep 3
cout "${C6}[ HeHe Boi ]${CD}${CN}"
alsa_aplay /system/etc/sounds/done.sos > /dev/null 2>&1
sec=5
while [ $sec -ge 0 ]; do
echo -ne "\e[33;1mRebooting in:-\e[91;1m$sec\e[0m\033[0K\r"
let "sec=sec-1"
sleep 1
done
reboot
fi
}
disable(){
cout "${C1}[ DISABLING EXTREME MODE ]${CD}${CN}"
cd /system/app
rm -rf com.n0n3m4.gltools-1
cd /data/media/0
rm -f uninstall_gltools.zip
cd /data/data
rm -rf com.n0n3m4.gltools
cd /system/lib
mv -f libEGL_orig.so libEGL.so
cd /system/lib
mv -f libGLESv1_CM_orig.so libGLESv1_CM.so
cd /system/lib
mv -f libGLESv2_orig.so libGLESv2.so
cd /system/lib
mv -f  libGLESv3_orig.so libGLESv3.so
cd /system/lib64
mv -f libEGL_orig.so libEGL.so
cd /system/lib64
mv -f libGLESv1_CM_orig.so libGLESv1_CM.so
cd /system/lib64
mv -f libGLESv2_orig.so libGLESv2.so
cd /system/lib64
mv -f  libGLESv3_orig.so libGLESv3.so
find /system -type d -exec chmod 755 {} \;
find /system/lib -type f -exec chmod 644 {} \;
find /system/lib64 -type f -exec chmod 644 {} \;
sleep 2
cout "${C6}[ HeHe Boi ]${CD}${CN}"
alsa_aplay /system/etc/sounds/done.sos > /dev/null 2>&1

sec=5
while [ $sec -ge 0 ]; do
echo -ne "\e[33;1mRebooting in:-\e[91;1m$sec\e[0m\033[0K\r"
let "sec=sec-1"
sleep 1
done
reboot    
}
cli(){
center "Heheboi"
logo "Extreme Mode"
center "Welcome"
cout "${C3}[ MADE BY SPECTRE ]${CD}${CN}"
cout "${C4}[ THIS SCRIPT IS USED TO OPTIMIZE PUBG GRAPHICS ACCORDING TO CHOICE AND ENABLE EXTREME FPS  ]${CD}${CN}"
cout "${C3}[ THIS SCRIPT APPLIES SYSTEMWIDE GPU PROXY FEATURED BY GLTOOLS APP, THANKS TO THE DEV ]${CD}${CN}"
cout "${C2}[ IF YOU'RE USING A TEMPLATE WITH NO EXTREME TAG, USE GFX TOOL BY TSOML, FOR ONCE TO ENABLE 60 FPS FOREVER ]${CD}${CN}"
cout "${C2}[ NOTE: SHOWING FPS IS DISABLED BY DEFAULT, BUT YOU CAN ENABLE IT MANUALLY VIA GLTOOLS APP AFTER ENABLING EXTREME MODE ]${CD}${CN}"
center "[ Select the options below ]"
echo
cout "${C3} [1] ENABLE EXTREME MODE  ${CD}${CN}"
cout "${C4} [2] DISABLE EXTREME MODE ${CD}${CN}"
cout "${C5} [3] Return To Main-Menu.${CD}${CN}"
cout "${C1} [4] Exit.${CD}${CN}"
echo -e "\e[93;1m"
read -p "Enter the Option :-" c 
echo -e "\e[0m"
clear
case $c in
1)
enable 
;;
2)
disable
;;
3)
bash /system/script/menu 
;;
4)
exit ;;
*)
cout "${C3}AH boi Here We Go Again....${CD}${CN}"
sleep 1
clear
cli 
;;
esac    
}
clear
cli